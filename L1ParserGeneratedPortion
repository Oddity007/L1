static const uint8_t rule_string_1[2] = {13, 11, };
static const uint8_t rule_string_2[1] = {15, };
static const uint8_t rule_string_3[1] = {14, };
static const uint8_t rule_string_4[1] = {19, };
static const uint8_t rule_string_5[5] = {19, 10, 19, 9, 13, };
static const uint8_t rule_string_6[4] = {19, 10, 9, 13, };
static const uint8_t rule_string_7[4] = {19, 10, 19, 9, };
static const uint8_t rule_string_8[5] = {17, 3, 19, 9, 13, };
static const uint8_t rule_string_9[6] = {17, 16, 3, 19, 9, 13, };
static const uint8_t rule_string_10[2] = {17, 16, };
static const uint8_t rule_string_11[1] = {17, };
static const uint8_t rule_string_12[1] = {0};
static const uint8_t rule_string_13[1] = {1, };
static const uint8_t rule_string_14[3] = {6, 18, 7, };
static const uint8_t rule_string_15[3] = {17, 8, 18, };
static const uint8_t rule_string_16[1] = {17, };
static const uint8_t rule_string_17[1] = {0};
static const uint8_t rule_string_18[2] = {21, 20, };
static const uint8_t rule_string_19[1] = {21, };
static const uint8_t rule_string_20[2] = {21, 20, };
static const uint8_t rule_string_21[1] = {21, };
static const uint8_t rule_string_22[1] = {1, };
static const uint8_t rule_string_23[1] = {0, };
static const uint8_t rule_string_24[1] = {2, };
static const uint8_t rule_string_25[3] = {4, 13, 5, };
static const uint8_t rule_string_26[3] = {6, 22, 7, };
static const uint8_t rule_string_27[3] = {19, 8, 22, };
static const uint8_t rule_string_28[1] = {19, };
static const uint8_t rule_string_29[1] = {0};
static const void* HandleAction(L1Parser* parser, const void* arguments[], Rule rule)
{
	switch(rule.action)
	{
		case 0:{return arguments[0];} break;
		case 1:{return CreateBranchNode(parser, arguments[0], arguments[2], arguments[4]);} break;
		case 2:{return CreateBranchNode(parser, arguments[0], NULL, arguments[3]);} break;
		case 3:{return CreateBranchNode(parser, arguments[0], arguments[2], NULL);} break;
		case 4:{return CreateAssignmentNode(parser, arguments[0], NULL, arguments[2], arguments[4]);} break;
		case 5:{return CreateAssignmentNode(parser, arguments[0], arguments[1], arguments[3], arguments[5]);} break;
		case 6:{return Cons(parser, arguments[0], arguments[1]);} break;
		case 7:{return Cons(parser, arguments[0], NULL);} break;
		case 8:{return NULL;} break;
		case 9:{return CreateListNode(parser, arguments[1]);} break;
		case 10:{return Cons(parser, arguments[0], arguments[2]);} break;
		case 11:{return CreateCallNode(parser, arguments[0], arguments[1]);} break;
		case 12:{return arguments[1];} break;
		default: return NULL;
	}
	return NULL;
}
static const Rule Rules[] = {{rule_string_1, 12, 2, 0}, {rule_string_2, 13, 1, 0}, {rule_string_3, 13, 1, 0}, {rule_string_4, 13, 1, 0}, {rule_string_5, 14, 5, 1}, {rule_string_6, 14, 4, 2}, {rule_string_7, 14, 4, 3}, {rule_string_8, 15, 5, 4}, {rule_string_9, 15, 6, 5}, {rule_string_10, 16, 2, 6}, {rule_string_11, 16, 1, 7}, {rule_string_12, 16, 0, 8}, {rule_string_13, 17, 1, 0}, {rule_string_14, 17, 3, 9}, {rule_string_15, 18, 3, 10}, {rule_string_16, 18, 1, 7}, {rule_string_17, 18, 0, 8}, {rule_string_18, 19, 2, 11}, {rule_string_19, 19, 1, 0}, {rule_string_20, 20, 2, 6}, {rule_string_21, 20, 1, 7}, {rule_string_22, 21, 1, 0}, {rule_string_23, 21, 1, 0}, {rule_string_24, 21, 1, 0}, {rule_string_25, 21, 3, 12}, {rule_string_26, 21, 3, 9}, {rule_string_27, 22, 3, 10}, {rule_string_28, 22, 1, 7}, {rule_string_29, 22, 0, 8}, };
static const uint8_t ProgramSymbol = 12;
static const uint8_t RuleCount = 29;

