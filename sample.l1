/*#let nat = 
	#adt
	.zero | 
	.succ (x : #self);
#let zero = (nat).zero;
//zero ? $ zero -> nat

#let Type = #universe 0;
#let option = 
	#fn (T : Type) ->
	#adt
	.none | 
	.some (x : T);
#let nat = 
	#adt
	.zero | 
	.succ (x : #self);
#let zero = (nat).zero;
#let succ = (nat).succ;
#let id = 
	#fn (a : Type) -> a;
//id (#adt)
//zero 
//? $ zero -> nat
//| $ succ x -> x
#let c = succ zero;
c
? $ succ x -> x
| $ zero -> (#fn (x : option) -> succ x)*/

#fn (a : #universe 0) -> a